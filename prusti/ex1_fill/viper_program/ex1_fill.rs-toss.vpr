field val_bool: Bool

function read$(): Perm
  ensures none < result
  ensures result < write


predicate DeadBorrowToken$(borrow: Int) 

predicate bool(self: Ref) {
  acc(self.val_bool, write)
}

method m_toss() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Def path: "ex1_fill::toss"
  
  // Span: ex1_fill.rs:60:1: 62:2 (#0)
  
  __t0 := false
  // Preconditions:
  
  label pre
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const true
  
  _0 := builtin$havoc_ref()
  inhale acc(_0.val_bool, write)
  _0.val_bool := true
  // [mir] return
  
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  label l1
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(bool(_0), write)
  // obtain acc(bool(_0), write)
  
  // Assert possible strengthening
  
  // Assert functional specification of postcondition
  
  // Assert type invariants
  
  assert true
  // Exhale permissions of postcondition (1/3)
  
  // Exhale permissions of postcondition (2/3)
  
  exhale acc(bool(_0), write)
  // Exhale permissions of postcondition (3/3)
  
  goto end_of_method
  label end_of_method
}

method builtin$havoc_bool() returns (ret: Bool)


method builtin$havoc_int() returns (ret: Int)


method builtin$havoc_ref() returns (ret: Ref)
